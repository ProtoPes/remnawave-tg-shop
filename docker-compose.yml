services:
  nginx:
    image: nginx:1.28.0-alpine-slim
    container_name: nginx-reverse-proxy
    hostname: nginx-reverse-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /opt/nginx/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /opt/nginx/privkey.key:/etc/nginx/ssl/privkey.key:ro
    restart: unless-stopped
    ports:
      - '0.0.0.0:443:443'
    networks:
      - remnawave-tg-shop-network

  remnawave-tg-shop:
    image: ghcr.io/protopes/remnawave-tg-shop:latest
    build: .
    container_name: remnawave-tg-shop
    hostname: remnawave-tg-shop
    env_file:
      - .env
    networks:
      - remnawave-tg-shop-network
    volumes:
      - ./locales:/app/locales
    restart: unless-stopped
    depends_on:
      remnawave-tg-shop-db:
        condition: service_healthy

  remnawave-tg-shop-db:
    image: postgres:17
    container_name: remnawave-tg-shop-db
    hostname: remnawave-tg-shop-db
    env_file:
      - .env
    volumes:
      - remnawave-tg-shop-db-data:/var/lib/postgresql/data
    networks:
      - remnawave-tg-shop-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 3s
      timeout: 10s
      retries: 3


volumes:
  remnawave-tg-shop-db-data:
    name: remnawave-tg-shop-db-data

networks:
  remnawave-tg-shop-network:
    name: remnawave-tg-shop-network
    driver: bridge
    external: false
